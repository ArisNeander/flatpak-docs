# Documentation Flatpak
# Copyright (C) 2017, Flatpak Team
# This file is distributed under the same license as the Flatpak package.
# Baptiste Mille-Mathias <baptiste.millemathias@gmail.com>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Flatpak \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-20 10:17-0400\n"
"PO-Revision-Date: 2017-06-30 18:01+0200\n"
"Last-Translator: Baptiste Mille-Mathias <baptiste.millemathias@gmail.com>"
"\n"
"Language-Team: fr_FR <traduc@traduc.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../flatpak-builder.rst:2
msgid "Flatpak Builder"
msgstr ""

#: ../../flatpak-builder.rst:4
msgid ""
"``flatpak-builder`` has already been introduced in :doc:`first-build` and"
" :doc:`building-introduction`. This page provides additional detail on "
"how to use ``flatpak-builder``, including the various command options "
"that are available."
msgstr ""

#: ../../flatpak-builder.rst:7
msgid "Exporting"
msgstr ""

#: ../../flatpak-builder.rst:9
msgid ""
"``flatpak-builder`` provides two options for exporting an application in "
"order to run it. The first is to export to a repository, from which the "
"application can be run. The second is to automatically install locally."
msgstr ""

#: ../../flatpak-builder.rst:12
msgid "Exporting to a repository"
msgstr ""

#: ../../flatpak-builder.rst:14
msgid ""
"The ``--repo`` option allows a repository to be specified, for the "
"application to be exported to. This takes the format::"
msgstr ""

#: ../../flatpak-builder.rst:18
msgid ""
"Here, ``<repo>`` is a path to a repository. If no repository exists at "
"the specified location, the repository will be created. If the "
"application is already in the specified repository, ``flatpak-builder`` "
"will add the build as a new version of the existing application."
msgstr ""

#: ../../flatpak-builder.rst:22
msgid ""
"By default, ``flatpak-builder`` splits off translations and debug "
"information into separate `.Locale` and `.Debug` extensions. These "
"extensions are automatically exported into a repository along with the "
"application."
msgstr ""

#: ../../flatpak-builder.rst:26
msgid "Installing builds directly"
msgstr ""

#: ../../flatpak-builder.rst:28
msgid ""
"Instead of exporting to a repository, the Flatpak that is produced by "
"``flatpak-builder`` can be automatically installed locally, using the "
"``--install`` option::"
msgstr ""

#: ../../flatpak-builder.rst:32
msgid ""
"This approach has the advantage of skipping the separate install step "
"that is needed when exporting to a repository."
msgstr ""

#: ../../flatpak-builder.rst:35
msgid "Signing"
msgstr ""

#: ../../flatpak-builder.rst:37
msgid ""
"Every commit to a Flatpak repository should be signed with a GPG "
"signature. If ``flatpak-builder`` is being used to modify or create a "
"repository, a GPG key should therefore be passed to it. This can be done "
"with the ``--gpg-sign`` option, such as::"
msgstr ""

#: ../../flatpak-builder.rst:41
msgid ""
"Here, ``<key>`` is the ID of the GPG key that is to be used. The ``--gpg-"
"homedir`` option can also be used to specify the home directory of the "
"key that is being used."
msgstr ""

#: ../../flatpak-builder.rst:43
msgid ""
"Though it generally isn't recommended, it is possible not to use GPG "
"verification. In this case, the ``--no-gpg-verify`` option should be used"
" when adding the repository. Note that it is necessary to become root in "
"order to update a repository that does not have GPG verification enabled."
msgstr ""

#~ msgid ""
#~ "Most applications require additional "
#~ "dependencies that aren't provided by "
#~ "their runtimes. Flatpak allows these "
#~ "dependencies to be bundled as part "
#~ "of the application itself. In order "
#~ "to do this, each dependency must "
#~ "be built inside the application build"
#~ " directory. The ``flatpak-builder`` tool"
#~ " automates this multi-step build "
#~ "process, making it possible to build "
#~ "all application modules with a single"
#~ " command."
#~ msgstr ""
#~ "La plupart des applications nécessite "
#~ "des dépendances additionnelles qui ne "
#~ "sont pas fournies avec leur runtime. "
#~ "Flatpak permet à ces dépendances d'être"
#~ " incluses à l'application elle-même. "
#~ "Pour faire ceci, chaque dépendance doit"
#~ " être construite à l'intérieur du "
#~ "répertoire de construction. L'outil "
#~ "``flatpak-builder`` automatise ce processus "
#~ "de plusieurs étapes, permettant de "
#~ "contruire tous les modules avec une "
#~ "seule commande."

#~ msgid ""
#~ "flatpak-builder expects modules to be"
#~ " built in the standard manner by "
#~ "following what is called the `Build "
#~ "API <https://github.com/cgwalters/build-api/>`_. "
#~ "This requires modifying modules to "
#~ "follow the build API, if they "
#~ "don't already."
#~ msgstr ""
#~ "flatpak-builder s'attend que les modules"
#~ " soient construits de manière standard "
#~ "en suivant ce qui est appelé "
#~ "l'`API Build <https://github.com/cgwalters/build-"
#~ "api/>`_. Cela requiert la modification "
#~ "des modules pour qu'ils suivent l'API"
#~ " de construction, si ils ne le "
#~ "suivent pas déjà."

#~ msgid "All json entities are explained in the man page of ``flatpak-builder``."
#~ msgstr ""
#~ "Toutes les entités json sont décrites"
#~ " dans la page de manuel de "
#~ "``flatpak-builder``."

#~ msgid "Manifests"
#~ msgstr "Manifestes"

#~ msgid ""
#~ "The input to flatpak-builder is a"
#~ " JSON file that describes the "
#~ "parameters for building an application, "
#~ "as well as each of the modules "
#~ "to be bundled. This file is called"
#~ " the manifest. Module sources can be"
#~ " of several types, including ``.tar`` "
#~ "or ``.zip`` archives, Git or Bzr "
#~ "repositories, patch files or shell "
#~ "commands that are run."
#~ msgstr ""
#~ "L'entrée pour flatpak-builder est un "
#~ "fichier JSON descrivant les paramètres "
#~ "pour construire une application, ainsi "
#~ "que les modules à intégrer.  Ce "
#~ "fichier est appelé le manifeste. Les "
#~ "sources de modules peuvent être de "
#~ "plusieurs types, comme des archives "
#~ "``.tar`` ou ``.zip``, des dépôts Git "
#~ "ou Bzr, des fichiers patch ou des"
#~ " commandes shell à exécuter."

#~ msgid ""
#~ "The GNOME Dictionary manifest is short,"
#~ " because the only module is the "
#~ "application itself::"
#~ msgstr ""
#~ "Le manifeste du Dictionnaire GNOME est"
#~ " court, parce que le seul module "
#~ "est l'application elle-même::"

#~ msgid ""
#~ "As can be seen, this manifest "
#~ "includes basic information about the "
#~ "application before specifying a single "
#~ ".tar file to be downloaded and "
#~ "built. More complex manifests include a"
#~ " sequence of modules."
#~ msgstr ""
#~ "Comme vous pouvez voir, ce manifeste "
#~ "inclus les informations basiques à "
#~ "propos de l'application avant de "
#~ "spécifier un seul fichier .tar à "
#~ "télécharger et construire. Des manisfestes "
#~ "plus complexes include une suite de "
#~ "modules."

#~ msgid "Cleanup"
#~ msgstr "Nettoyage"

#~ msgid ""
#~ "After building has taken place, "
#~ "flatpak-builder performs a cleanup phase."
#~ " This can be used to remove "
#~ "headers and development documentation, among"
#~ " other things. Two properties in the"
#~ " manifest file are used for this. "
#~ "First, a list of filename patterns "
#~ "can be included::"
#~ msgstr ""
#~ "Après que la construction ait été "
#~ "faite, flatpak-builder réalise une phase"
#~ " de nettoyage. Cela peut être utilisé"
#~ " pour supprimer les en-têtes et "
#~ "la documentation de développement, parmis "
#~ "d'autres choses. Deux propriétés dans le"
#~ " fichier manisfeste sont utilisés pour "
#~ "cela. Premièrement, une liste de patrons"
#~ " de nom de fichiers peut être "
#~ "incluse::"

#~ msgid ""
#~ "The second cleanup property is a "
#~ "list of commands that are run "
#~ "during the cleanup phase::"
#~ msgstr ""
#~ "La seconde propriété de nettoyage est"
#~ " une liste de commandes qui sera "
#~ "lancée durant la phase de nettoyage::"

#~ msgid ""
#~ "Cleanup properties can be set on a"
#~ " per-module basis, in which case "
#~ "only filenames that were created by "
#~ "that particular module will be matched."
#~ msgstr ""
#~ "Les propriétés de nettoyage peuvent être"
#~ " définies par module, dans ce cas "
#~ "seuls les fichiers créés dans ce "
#~ "module particulier seront ciblés."

#~ msgid "File renaming"
#~ msgstr "Renommage de fichier"

#~ msgid ""
#~ "Files that are exported by a "
#~ "flatpak must be prefixed using the "
#~ "application ID. If an application's "
#~ "source files are not named using "
#~ "this convention, flatpak-builder allows "
#~ "them to be renamed as part of "
#~ "the build process. To rename application"
#~ " icons, desktop files and AppData "
#~ "files, use the ``rename-icon``, "
#~ "``rename-desktop-file`` and ``rename-"
#~ "appdata`` properties."
#~ msgstr ""
#~ "Les fichiers exportés par Flatpak "
#~ "doivent être préfixés avec l'identifiant "
#~ "d'application. Si les fichiers sources "
#~ "d'une application ne sont pas nommés "
#~ "suivant cette convention, flatpak-builder "
#~ "permet de les renommer durant le "
#~ "processus de construction. Pour renommer "
#~ "les fichiers icônes, desktop et AppData,"
#~ " utilisez les propriétés ``rename-icon``,"
#~ " ``rename-desktop-file`` et ``rename-"
#~ "appdata``."

#~ msgid "Splitting things up"
#~ msgstr "Séparer les choses"

#~ msgid ""
#~ "By default, flatpak-builder splits off"
#~ " translations and debug information into"
#~ " separate .Locale and .Debug extensions."
#~ " These 'standard' extension points are "
#~ "then added to the application's metadata"
#~ " file. You can turn this off "
#~ "with the ``separate-locales`` and "
#~ "``no-debuginfo`` keys, but there shouldn't"
#~ " be any reason for it."
#~ msgstr ""
#~ "Par défaut, flatpak-builder séparer les"
#~ " traductions et les informations de "
#~ "débogage dans des extensions .Locale et"
#~ " .Debug. Ces extensions \"standards\" sont"
#~ " ensuite ajoutées dans le fichier de"
#~ " meta-données de l'application. Cela "
#~ "peut être désactivé avec les clés "
#~ "``separate-locales`` et ``no-debuginfo``, "
#~ "mais il ne devrait pas y avoir "
#~ "de raisons valables pour le faire."

#~ msgid ""
#~ "When flatpak-builder exports the build"
#~ " into a repository, it automatically "
#~ "includes the .Locale and .Debug "
#~ "extensions. If you do the exporting "
#~ "manually, don't forget to include them."
#~ msgstr ""
#~ "Quand flatpak-builder exporte le "
#~ "résultat de la construction dans un "
#~ "dépôt, il inclus automatiquement les "
#~ "extensions  .Locale et .Debug. Dans le"
#~ " cas d'un export manuel, n'oubliez "
#~ "pas de les inclure."

#~ msgid "Example"
#~ msgstr "Exemple"

#~ msgid ""
#~ "To try flatpak-builder yourself, create"
#~ " a file called ``org.gnome.Dictionary.json`` "
#~ "and paste the Dictionary manifest JSON"
#~ " from above into it. Then run "
#~ "the following command::"
#~ msgstr ""
#~ "Pour essayer flatpak-builder vous-même,"
#~ " créez un fichier nommé "
#~ "``org.gnome.Dictionary.json`` et copiez le "
#~ "manifeste JSON de l'application dictionnaire"
#~ " ci-dessus dedans. Puis lancez la "
#~ "commande suivante::"

#~ msgid "This will:"
#~ msgstr "Cela va:"

#~ msgid ""
#~ "Create a new directory called "
#~ "dictionary2 (equivalent to using `flatpak "
#~ "build-init`)"
#~ msgstr ""
#~ "Créer un nouveau répertoire nommé "
#~ "dictionary2 (équivalent à `flatpak build-"
#~ "init`)"

#~ msgid "Download and verify the Dictionary source code"
#~ msgstr "Télécharger et vérifier le code source de GNOME Dictionnaire"

#~ msgid ""
#~ "Build and install the source code, "
#~ "using the SDK rather than the host"
#~ " system"
#~ msgstr ""
#~ "Construire et installer le code source"
#~ " à l'aide du SDK plutôt que de"
#~ " l'ĥôte système"

#~ msgid ""
#~ "Finish the build, by setting permissions"
#~ " (in this case giving access to "
#~ "X and the network)"
#~ msgstr ""
#~ "Finir la construction en définissant les"
#~ " permissions (dans ce cas donnez "
#~ "accès au serveur X et au réseau)"

#~ msgid ""
#~ "Create a new repository called repo "
#~ "(if it doesn't exist) and export "
#~ "the resulting build into it"
#~ msgstr ""
#~ "Créer un nouveau dépôt nommé repo "
#~ "(si il n'existe pas déjà) et "
#~ "exporter le résultat de la construction"
#~ " dedans"

#~ msgid ""
#~ "flatpak-builder will also do some "
#~ "other useful things, like creating a "
#~ "separately installable debug runtime (called"
#~ " `org.gnome.Dictionary.Debug` in this case) "
#~ "and a separately installable translation "
#~ "runtime (called ``org.gnome.Dictionary.Locale``)."
#~ msgstr ""
#~ "flatpak-builder fera aussi d'autres "
#~ "choses utiles, tel que créer un "
#~ "runtime de débogage séparé (appelé "
#~ "``org.gnome.Dictionary.Debug`` dans ce cas) "
#~ "and un runtime de traduction séparé "
#~ "(appelé ``org.gnome.Dictionary.Locale``)"

#~ msgid ""
#~ "If you completed the tutorial in "
#~ "`Building Simple Apps <building-simple-"
#~ "apps.html>`_, you can update the "
#~ "Dictionary application you installed with "
#~ "the new version that was built and"
#~ " exported by flatpak-builder::"
#~ msgstr ""
#~ "Si vous terminez le tutoriel dans "
#~ "`Construction d'applications simples <building-"
#~ "simple-apps.html>`_, vous pouvez mettre "
#~ "à jour l'application Dictionnaire installée"
#~ " avec la nouvelle version qui a "
#~ "été construite et exportée par "
#~ "flatpak-builder::"

#~ msgid ""
#~ "To check that the application has "
#~ "been successfully updated, you can "
#~ "compare the sha256 commit of the "
#~ "installed app with the commit ID "
#~ "that was printed by flatpak-builder::"
#~ msgstr ""
#~ "Pour vérifier que l'application a été"
#~ " mise à jour avec succès, vous "
#~ "pouvez comparer les commits sha256 de"
#~ " l'application installée avec celui affiché"
#~ " par flatpak-builder::"

#~ msgid "And finally, you can run the new version of the Dictionary app::"
#~ msgstr ""
#~ "Et finalement vous pouvez lancer la "
#~ "nouvelle version de l'application "
#~ "Dictionnaire::"

#~ msgid "Example manifests"
#~ msgstr "Exemples de manifestes"

#~ msgid ""
#~ "A `complete manifest for GNOME "
#~ "Dictionary built from Git "
#~ "<https://git.gnome.org/browse/gnome-"
#~ "dictionary/tree/data/org.gnome.Dictionary.json>`_ is "
#~ "available, in addition to `manifests for"
#~ " a range of other GNOME applications"
#~ " <https://git.gnome.org/browse/gnome-apps-"
#~ "nightly/tree/>`_."
#~ msgstr ""
#~ "Un manifeste complet pour GNOME "
#~ "Dictionnaire construit à partir de Git"
#~ " <https://git.gnome.org/browse/gnome-"
#~ "dictionary/tree/data/org.gnome.Dictionary.json>`_ est "
#~ "disponible, en plus de `manisfestes "
#~ "d'autres applications GNOME "
#~ "<https://git.gnome.org/browse/gnome-apps-nightly/tree/>`_."

