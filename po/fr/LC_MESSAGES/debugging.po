# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, 2018, Flatpak Team. Licensed under Creative Commons
# Attribution 4.0 International License.
# This file is distributed under the same license as the Flatpak package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flatpak \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-20 10:17-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../debugging.rst:2
msgid "Debugging"
msgstr ""

#: ../../debugging.rst:4
msgid "This section includes documentation on how to debug Flatpak apps."
msgstr ""

#: ../../debugging.rst:7
msgid "Running debugging tools"
msgstr ""

#: ../../debugging.rst:9
msgid ""
"Because Flatpak runs each application inside a sandbox, debugging tools "
"can't be used in the usual way, and must instead be run from inside the "
"sandbox. To get a shell inside an application's sandbox, it can be run "
"with the ``--command`` option::"
msgstr ""

#: ../../debugging.rst:13
msgid ""
"This creates a sandbox for the application with the given ID and, instead"
" of running the application, runs a shell inside the sandbox. From the "
"shell prompt, it is then possible to run the application. This can also "
"be done using any debugging tools that you want to use. For example, to "
"run the application with ``gdb``::"
msgstr ""

#: ../../debugging.rst:17
msgid ""
"This works because the ``--devel`` option tells Flatpak to use the SDK as"
" the runtime, which includes debugging tools like ``gdb``. The "
"``--devel`` option also adjusts the sandbox setup to enable debugging."
msgstr ""

#: ../../debugging.rst:23
msgid ""
"The Freedesktop SDK (on which many others are based), includes a range of"
" debugging tools, such as ``gdb``, ``strace``, ``nm``, ``dbus-send``, "
"``dconf``, and many others."
msgstr ""

#: ../../debugging.rst:25
msgid ""
"``gdb`` is much more useful when it has access to debug information for "
"the application and the runtime it is using. Flatpak splits this "
"information off into debug extensions, which you should install before "
"debugging an application::"
msgstr ""

#: ../../debugging.rst:31
msgid ""
"When the ``--devel`` option is used, Flatpak will automatically use any "
"matching debug extensions that it finds."
msgstr ""

#: ../../debugging.rst:34
msgid ""
"It is also possible to get a shell inside an application sandbox without "
"having to install it. This is done using ``flatpak-builder``'s ``--run`` "
"option::"
msgstr ""

#: ../../debugging.rst:38
msgid ""
"This sets up a sandbox that is populated with the build results found in "
"the build directory, and runs a shell inside it."
msgstr ""

#: ../../debugging.rst:42
msgid "Creating a .Debug extension"
msgstr ""

#: ../../debugging.rst:44
msgid ""
"Like many other packaging systems, Flatpak separates bulky debug "
"information from regular content and ships it separately, in what is "
"called a ``.Debug`` extension."
msgstr ""

#: ../../debugging.rst:46
msgid ""
"When an application is built, ``flatpak-builder`` automatically creates a"
" ``.Debug`` extension. This can be disabled with the ``no-debuginfo`` "
"option."
msgstr ""

#: ../../debugging.rst:51
msgid "Overriding sandbox permissions"
msgstr ""

#: ../../debugging.rst:53
msgid ""
"It is sometimes useful to have extra permissions in a sandbox when "
"debugging. This can be achieved using the various sandbox options that "
"are accepted by the run command. For example::"
msgstr ""

#: ../../debugging.rst:58
msgid ""
"This command runs a shell in the sandbox for the given application, "
"granting it system bus access to the bus name owned by logind."
msgstr ""

