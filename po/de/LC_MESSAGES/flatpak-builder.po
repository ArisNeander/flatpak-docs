# Flatpak docs
# Copyright (C) 2017, Flatpak Team
# This file is distributed under the same license as the Flatpak package.
# Markus Richter <semanticdesign@mailbox.org>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Flatpak \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-20 10:17-0400\n"
"PO-Revision-Date: 2017-10-13 18:01+0200\n"
"Last-Translator: Markus Richter <semanticdesign@mailbox.org>\n"
"Language: de_DE\n"
"Language-Team: de_DE <>\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../../flatpak-builder.rst:2
msgid "Flatpak Builder"
msgstr "Flatpak Builder"

#: ../../flatpak-builder.rst:4
msgid ""
"``flatpak-builder`` has already been introduced in :doc:`first-build` and"
" :doc:`building-introduction`. This page provides additional detail on "
"how to use ``flatpak-builder``, including the various command options "
"that are available."
msgstr ""

#: ../../flatpak-builder.rst:7
msgid "Exporting"
msgstr ""

#: ../../flatpak-builder.rst:9
msgid ""
"``flatpak-builder`` provides two options for exporting an application in "
"order to run it. The first is to export to a repository, from which the "
"application can be run. The second is to automatically install locally."
msgstr ""

#: ../../flatpak-builder.rst:12
msgid "Exporting to a repository"
msgstr ""

#: ../../flatpak-builder.rst:14
msgid ""
"The ``--repo`` option allows a repository to be specified, for the "
"application to be exported to. This takes the format::"
msgstr ""

#: ../../flatpak-builder.rst:18
msgid ""
"Here, ``<repo>`` is a path to a repository. If no repository exists at "
"the specified location, the repository will be created. If the "
"application is already in the specified repository, ``flatpak-builder`` "
"will add the build as a new version of the existing application."
msgstr ""

#: ../../flatpak-builder.rst:22
msgid ""
"By default, ``flatpak-builder`` splits off translations and debug "
"information into separate `.Locale` and `.Debug` extensions. These "
"extensions are automatically exported into a repository along with the "
"application."
msgstr ""

#: ../../flatpak-builder.rst:26
msgid "Installing builds directly"
msgstr ""

#: ../../flatpak-builder.rst:28
msgid ""
"Instead of exporting to a repository, the Flatpak that is produced by "
"``flatpak-builder`` can be automatically installed locally, using the "
"``--install`` option::"
msgstr ""

#: ../../flatpak-builder.rst:32
msgid ""
"This approach has the advantage of skipping the separate install step "
"that is needed when exporting to a repository."
msgstr ""

#: ../../flatpak-builder.rst:35
msgid "Signing"
msgstr ""

#: ../../flatpak-builder.rst:37
msgid ""
"Every commit to a Flatpak repository should be signed with a GPG "
"signature. If ``flatpak-builder`` is being used to modify or create a "
"repository, a GPG key should therefore be passed to it. This can be done "
"with the ``--gpg-sign`` option, such as::"
msgstr ""

#: ../../flatpak-builder.rst:41
msgid ""
"Here, ``<key>`` is the ID of the GPG key that is to be used. The ``--gpg-"
"homedir`` option can also be used to specify the home directory of the "
"key that is being used."
msgstr ""

#: ../../flatpak-builder.rst:43
msgid ""
"Though it generally isn't recommended, it is possible not to use GPG "
"verification. In this case, the ``--no-gpg-verify`` option should be used"
" when adding the repository. Note that it is necessary to become root in "
"order to update a repository that does not have GPG verification enabled."
msgstr ""

#~ msgid ""
#~ "Most applications require additional "
#~ "dependencies that aren't provided by "
#~ "their runtimes. Flatpak allows these "
#~ "dependencies to be bundled as part "
#~ "of the application itself. In order "
#~ "to do this, each dependency must "
#~ "be built inside the application build"
#~ " directory. The ``flatpak-builder`` tool"
#~ " automates this multi-step build "
#~ "process, making it possible to build "
#~ "all application modules with a single"
#~ " command."
#~ msgstr ""
#~ "Die meisten Anwendungen benötigen zusätzliche"
#~ " Abhängigkeiten, die nicht von ihren "
#~ "Laufzeitumgebungen bereit gestellt werden. "
#~ "Flatpak erlaubt es, diese Abhängigkeiten "
#~ "als Teil der Anwendung selbst zu "
#~ "bündeln. Um dies durchzuführen, muss "
#~ "jede Abhängigkeit innerhalb des Build-"
#~ "Verzeichnisses der App erzeugt werden. "
#~ "Das ``flatpak-builder``-Tool automatisiert "
#~ "diesen mehrstufigen Buildprozess und "
#~ "ermöglicht es, alle Applikationsmodule mit "
#~ "einem einzigen Kommando zu erzeugen."

#~ msgid ""
#~ "flatpak-builder expects modules to be"
#~ " built in the standard manner by "
#~ "following what is called the `Build "
#~ "API <https://github.com/cgwalters/build-api/>`_. "
#~ "This requires modifying modules to "
#~ "follow the build API, if they "
#~ "don't already."
#~ msgstr ""
#~ "Flatpak Builder erwartet, dass Module "
#~ "mit der Standardmethode erzeugt werden, "
#~ "der `Build-API <https://github.com/cgwalters"
#~ "/build-api/>`_ folgend. Dies setzt voraus,"
#~ " Module so zu modifizieren, dass sie"
#~ " sich an die Build-API halten, "
#~ "wenn dies noch nicht der Fall ist."

#~ msgid "All json entities are explained in the man page of ``flatpak-builder``."
#~ msgstr ""
#~ "Alle JSON-Entitäten sind erläutert in"
#~ " der Man-Page von ``flatpak-"
#~ "builder``."

#~ msgid "Manifests"
#~ msgstr "Manifeste"

#~ msgid ""
#~ "The input to flatpak-builder is a"
#~ " JSON file that describes the "
#~ "parameters for building an application, "
#~ "as well as each of the modules "
#~ "to be bundled. This file is called"
#~ " the manifest. Module sources can be"
#~ " of several types, including ``.tar`` "
#~ "or ``.zip`` archives, Git or Bzr "
#~ "repositories, patch files or shell "
#~ "commands that are run."
#~ msgstr ""
#~ "Die Eingabe für Flatpak Builder ist "
#~ "eine JSON-Datei, die die Parameter "
#~ "beschreibt für das Erstellen einer "
#~ "Applikation, ebenso wie für jedes Modul,"
#~ " das beigefügt wird. Diese Datei wird"
#~ " das Manifest genannt. Modulquellen können"
#~ " verschiedenartigen Typs sein, inklusive "
#~ "`.tar`- oder `.zip`-Archive, Git- oder "
#~ "Bazaar-Repositorys, Patchdateien oder laufende"
#~ " Shellkommandos."

#~ msgid ""
#~ "The GNOME Dictionary manifest is short,"
#~ " because the only module is the "
#~ "application itself::"
#~ msgstr ""
#~ "Das GNOME Dictionary Manifest ist kurz,"
#~ " da das einzige Modul die Applikation"
#~ " selbst ist::"

#~ msgid ""
#~ "As can be seen, this manifest "
#~ "includes basic information about the "
#~ "application before specifying a single "
#~ ".tar file to be downloaded and "
#~ "built. More complex manifests include a"
#~ " sequence of modules."
#~ msgstr ""
#~ "Wie man sehen kann, enthält dieses "
#~ "Manifest zuerst Basisinformationen über die"
#~ " Anwendung, bevor eine einzelne "
#~ "`.tar`-Datei spezifiziert wird, die dann "
#~ "heruntergeladen und erzeugt wird. Komplexere"
#~ " Module beinhalten eine Sequenz von "
#~ "Modulen."

#~ msgid "Cleanup"
#~ msgstr "Aufräumarbeiten"

#~ msgid ""
#~ "After building has taken place, "
#~ "flatpak-builder performs a cleanup phase."
#~ " This can be used to remove "
#~ "headers and development documentation, among"
#~ " other things. Two properties in the"
#~ " manifest file are used for this. "
#~ "First, a list of filename patterns "
#~ "can be included::"
#~ msgstr ""
#~ "Nach Abschluss der Erstellung führt "
#~ "Flatpak Builder eine Aufräumphase durch. "
#~ "Diese kann genutzt werden, um Header "
#~ "und Entwicklerdokumentation zu entfernen, "
#~ "neben anderen Dingen. Zwei Eigenschaften "
#~ "in der Manifestdatei werden hierfür "
#~ "genutzt. Zuerst kann eine Liste von "
#~ "Dateinamenmustern hinzugefügt werden::"

#~ msgid ""
#~ "The second cleanup property is a "
#~ "list of commands that are run "
#~ "during the cleanup phase::"
#~ msgstr ""
#~ "Die zweite Aufräumeigenschaft ist eine "
#~ "Liste von Kommandos, die während der "
#~ "Aufräumphase durchlaufen wird::"

#~ msgid ""
#~ "Cleanup properties can be set on a"
#~ " per-module basis, in which case "
#~ "only filenames that were created by "
#~ "that particular module will be matched."
#~ msgstr ""
#~ "Aufräumeigenschaften können pro Modul gesetzt"
#~ " werden. In diesem Fall werden "
#~ "lediglich Dateinamen gefunden, die von "
#~ "dem jeweiligen Modul erstellt wurden."

#~ msgid "File renaming"
#~ msgstr "Umbenennen von Dateien"

#~ msgid ""
#~ "Files that are exported by a "
#~ "flatpak must be prefixed using the "
#~ "application ID. If an application's "
#~ "source files are not named using "
#~ "this convention, flatpak-builder allows "
#~ "them to be renamed as part of "
#~ "the build process. To rename application"
#~ " icons, desktop files and AppData "
#~ "files, use the ``rename-icon``, "
#~ "``rename-desktop-file`` and ``rename-"
#~ "appdata`` properties."
#~ msgstr ""
#~ "Dateien, die nach Flatpak exportiert "
#~ "werden, muss die Applikations-ID "
#~ "vorangestellt werden. Wenn die Quelldateien"
#~ " einer Applikation nicht benannt sind "
#~ "nach dieser Konvention, erlaubt es "
#~ "Flatpak Builder, diese als Teil des "
#~ "Erstellungsprozesses umzubenennen. Um "
#~ "Applikationssymbole, Desktop- und AppData-"
#~ "Dateien umzubenennen, verwendet man die "
#~ "``rename-icon``-, ``rename-desktop-file``- "
#~ "und ``rename-appdata``-Eigenschaften."

#~ msgid "Splitting things up"
#~ msgstr "Aufsplitten"

#~ msgid ""
#~ "By default, flatpak-builder splits off"
#~ " translations and debug information into"
#~ " separate .Locale and .Debug extensions."
#~ " These 'standard' extension points are "
#~ "then added to the application's metadata"
#~ " file. You can turn this off "
#~ "with the ``separate-locales`` and "
#~ "``no-debuginfo`` keys, but there shouldn't"
#~ " be any reason for it."
#~ msgstr ""
#~ "In den Standardeinstellungen splittet Flatpak"
#~ " Builder Übersetzungen und Debug-"
#~ "Informationen in separate `.Locale`- und "
#~ "`.Debug`-Erweiterungen. Diese "
#~ "„Standard\"-Erweiterungspunkte werden dann zur "
#~ "Metadatendatei der Applikation hinzugefügt. "
#~ "Dies kann abgeschaltet werden mittels "
#~ "der ``separate-locales``- und ``no-"
#~ "debuginfo``-Schlüssel. Regulär sollte hierzu "
#~ "jedoch kein Grund bestehen."

#~ msgid ""
#~ "When flatpak-builder exports the build"
#~ " into a repository, it automatically "
#~ "includes the .Locale and .Debug "
#~ "extensions. If you do the exporting "
#~ "manually, don't forget to include them."
#~ msgstr ""
#~ "Wenn Flatpak Builder den Build in "
#~ "ein Repository exportiert, fügt es "
#~ "automatisch  die `.Locale`- und "
#~ "`.Debug`-Extensions hinzu. Wenn der Export "
#~ "manuell vorgenommen wird, darf nicht "
#~ "vergessen werden, diese beizufügen."

#~ msgid "Example"
#~ msgstr "Beispiel"

#~ msgid ""
#~ "To try flatpak-builder yourself, create"
#~ " a file called ``org.gnome.Dictionary.json`` "
#~ "and paste the Dictionary manifest JSON"
#~ " from above into it. Then run "
#~ "the following command::"
#~ msgstr ""
#~ "Um Flatpak Builder auszuprobieren, kann "
#~ "eine Datei mit dem Namen "
#~ "``org.gnome.Dictionary.json`` erstellt und das "
#~ "JSON-Dictionary-Manifest von oben "
#~ "hineinkopiert werden. Dann wird das "
#~ "folgende Kommando gestartet::"

#~ msgid "This will:"
#~ msgstr "Dies wird:"

#~ msgid ""
#~ "Create a new directory called "
#~ "dictionary2 (equivalent to using `flatpak "
#~ "build-init`)"
#~ msgstr ""
#~ "Ein neues Verzeichnis erzeugen namens "
#~ "`dictionary2` (equivalent zum Verwenden von"
#~ " ``flatpak build-init``)."

#~ msgid "Download and verify the Dictionary source code"
#~ msgstr "Den Quellcode des GNOME Dictionary herunterladen und verifizieren."

#~ msgid ""
#~ "Build and install the source code, "
#~ "using the SDK rather than the host"
#~ " system"
#~ msgstr ""
#~ "Den Quellcode kompilieren und installieren "
#~ "unter Verwendung des SDK, anstelle des"
#~ " Host-Systems."

#~ msgid ""
#~ "Finish the build, by setting permissions"
#~ " (in this case giving access to "
#~ "X and the network)"
#~ msgstr ""
#~ "Den Build beenden mit dem Setzen "
#~ "von Berechtigungen (in diesem Fall wird"
#~ " Zugriff auf X und das Netzwerk "
#~ "gewährt)."

#~ msgid ""
#~ "Create a new repository called repo "
#~ "(if it doesn't exist) and export "
#~ "the resulting build into it"
#~ msgstr ""
#~ "Ein neues Repository erzeugen names "
#~ "`repo` (wenn es nicht bereits existiert)"
#~ " und den erstellten Build in dieses"
#~ " hinein exportieren."

#~ msgid ""
#~ "flatpak-builder will also do some "
#~ "other useful things, like creating a "
#~ "separately installable debug runtime (called"
#~ " `org.gnome.Dictionary.Debug` in this case) "
#~ "and a separately installable translation "
#~ "runtime (called ``org.gnome.Dictionary.Locale``)."
#~ msgstr ""
#~ "Flatpak Builder wird auch einige andere"
#~ " nützliche Dinge tun, wie das "
#~ "Erzeugen einer separat installierbaren "
#~ "Debug-Runtime (in diesem Fall genannt "
#~ "``org.gnome.Dictionary.Debug``) und einer separat"
#~ " installierbaren Übersetzungs-Runtime (in "
#~ "diesem Fall genannt "
#~ "``org.gnome.Dictionary.Locale``)."

#~ msgid ""
#~ "If you completed the tutorial in "
#~ "`Building Simple Apps <building-simple-"
#~ "apps.html>`_, you can update the "
#~ "Dictionary application you installed with "
#~ "the new version that was built and"
#~ " exported by flatpak-builder::"
#~ msgstr ""
#~ "Wenn das Tutorial in `Erstellen "
#~ "einfacher Apps <building-simple-apps.html>`_"
#~ " vervollständigt wurde, kann die "
#~ "installierte Dictionary-App mit der "
#~ "neuen Version, die von Flatpak Builder"
#~ " erzeugt und exportiert wurde, aktualisiert"
#~ " werden::"

#~ msgid ""
#~ "To check that the application has "
#~ "been successfully updated, you can "
#~ "compare the sha256 commit of the "
#~ "installed app with the commit ID "
#~ "that was printed by flatpak-builder::"
#~ msgstr ""
#~ "Um zu überprüfen, ob die Anwendung "
#~ "erfolgreich aktualisiert wurde, kann man "
#~ "den sha256-Commit der installierten App "
#~ "mit der Commit-ID vergleichen, die "
#~ "mittels Flatpak Builder geschrieben wurde::"

#~ msgid "And finally, you can run the new version of the Dictionary app::"
#~ msgstr ""
#~ "Und abschließend kann man die neue "
#~ "Version der Dictionary-App ausführen::"

#~ msgid "Example manifests"
#~ msgstr "Beispielmanifeste"

#~ msgid ""
#~ "A `complete manifest for GNOME "
#~ "Dictionary built from Git "
#~ "<https://git.gnome.org/browse/gnome-"
#~ "dictionary/tree/data/org.gnome.Dictionary.json>`_ is "
#~ "available, in addition to `manifests for"
#~ " a range of other GNOME applications"
#~ " <https://git.gnome.org/browse/gnome-apps-"
#~ "nightly/tree/>`_."
#~ msgstr ""
#~ "Ein `vollständiges Manifest für das von"
#~ " Git generierte GNOME Dictionary "
#~ "<https://git.gnome.org/browse/gnome-"
#~ "dictionary/tree/data/org.gnome.Dictionary.json>`_ steht "
#~ "zur Verfügung, zusätzlich zu `Manifesten "
#~ "für eine Bandbreite anderer GNOME-"
#~ "Anwendungen <https://git.gnome.org/browse/gnome-apps-"
#~ "nightly/tree/>`_."

